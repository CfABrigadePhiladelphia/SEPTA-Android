def gitHash = "git rev-parse --short HEAD".execute().text.trim()

apply plugin: 'android'

dependencies {
    compile 'com.android.support:gridlayout-v7:19.0.1'
    compile 'com.android.support:support-v4:19.0.1'
    compile 'com.android.support:appcompat-v7:19.0.1'
}

// check that the SEPTA.signing gradle property exists and that its value is the filename to a file
//  that has the extension of gradle
if (project.hasProperty("SEPTA.signing") && file(project.property("SEPTA.signing") + ".gradle").exists()) {
    apply from: project.property("SEPTA.signing") + ".gradle"
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.1"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
        versionCode 1
        versionName "0.1.0d-${gitHash}"

        buildConfigField "String", "VERSION", "\"${versionName}\""
    }

    signingConfigs {
        alpha {
            storeFile file("septaandroid.jks")
            storePassword KEYSTOREpassword
            keyAlias "alpha"
            keyPassword ALPHA_keyaliaspassword
        }
        beta {
            storeFile file("septaandroid.jks")
            storePassword KEYSTOREpassword
            keyAlias "beta"
            keyPassword BETA_keyaliaspassword
        }
        release {
            storeFile file("septaandroid.jks")
            storePassword KEYSTOREpassword
            keyAlias "release"
            keyPassword RELEASE_keyaliaspassword
        }
    }

    buildTypes {
        debug {
            runProguard false
            debuggable true
            zipAlign false
        }
        alpha {
            runProguard false
            debuggable true
            zipAlign true
            signingConfig signingConfigs.alpha
        }
        beta {
            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            debuggable false
            zipAlign true
            signingConfig signingConfigs.beta
        }
        release {
            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            debuggable false
            zipAlign true
            signingConfig signingConfigs.release
        }
    }
}
